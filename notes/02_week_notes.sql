use movies;

-- JOINING TABLES - NAIVE SOLUTION --
SELECT TITLE, YEAR, STUDIONAME, ADDRESS
FROM MOVIE, STUDIO
WHERE STUDIONAME = NAME AND INCOLOR = 'y';

-- JOINING TABLES WITH JOIN --
SELECT TITLE, YEAR,  STUDIONAME, ADDRESS
FROM MOVIE
JOIN STUDIO ON STUDIONAME = NAME
WHERE INCOLOR = 'y';

use pc;

-- SAME NAME COLUMNS --
SELECT MAKER, LAPTOP.MODEL, PRICE
FROM LAPTOP
JOIN PRODUCT
ON LAPTOP.MODEL = PRODUCT.MODEL
WHERE SCREEN = 15;

use movies;

-- JOINING TABLE WITH ITSELF --
SELECT m1.TITLE
FROM MOVIE m1, MOVIE m2
WHERE m2.title = 'Star Wars'
AND m1.LENGTH > m2.LENGTH;

-- USING AS FOR RENAMING --
SELECT m1.TITLE
FROM MOVIE AS m1, MOVIE AS m2
WHERE m2.TITLE = 'Star Wars'
AND m1.LENGTH > m2.LENGTH;

-- JOINING MULTIPLE TABLES --
SELECT NAME, TITLE
FROM MOVIESTAR
JOIN STARSIN ON NAME = STARNAME
JOIN MOVIE ON MOVIETITLE = TITLE AND MOVIEYEAR = YEAR
WHERE GENDER = 'F' AND STUDIONAME = 'MGM';

-- UNION --
(
	SELECT TITLE, YEAR 
	FROM MOVIE
	WHERE INCOLOR = 'y'
)
UNION
(
	SELECT MOVIETITLE, MOVIEYEAR
	FROM STARSIN
	WHERE STARNAME = 'Harrison Ford'
);

-- INTERSECT --
(
	SELECT NAME, ADDRESS
	FROM MOVIESTAR
	WHERE GENDER = 'F'
)
INTERSECT
(
	SELECT NAME, ADDRESS
	FROM MOVIEEXEC
	WHERE NETWORTH > 10000000
);

-- EXCEPT --
(
	SELECT NAME, ADDRESS
	FROM MOVIESTAR
)
EXCEPT
(
	SELECT NAME, ADDRESS
	FROM MOVIEEXEC
)
ORDER BY ADDRESS;

use ships;

-- DISTINCT --
SELECT DISTINCT BATTLE
FROM OUTCOMES
WHERE RESULT = 'sunk';
